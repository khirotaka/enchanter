name: CI Linux

on:
  push:
  pull_request:

jobs:
  pytest:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        comet: [true, false]
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Add path for Poetry
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Install Dependencies
        if: "matrix.comet == false"
        run: |
          poetry run pip install -U pip
          poetry run pip install -U torch torchvision
          poetry run pip install tensorflow tensorflow-datasets mxnet
          poetry install --no-interaction

      - name: Install Dependencies with Comet.ml
        if: "matrix.comet == true"
        run: |
          poetry run pip install -U pip
          poetry run pip install -U torch torchvision
          poetry run pip install tensorflow tensorflow-datasets mxnet
          poetry install --no-interaction --extras comet

      - name: Lint with flake8
        run: |
          # Pythonの構文エラーもしくは未定義の名前があればビルドを停止
          poetry run flake8 enchanter/ --count --select=E9,F63,F7,F82,E203 --show-source --statistics
          # exit-zeroはすべてのエラーを警告として扱う。
          poetry run flake8 enchanter/ --count --exit-zero --max-complexity=22 --max-line-length=120 --statistics

      - name: Check code style with Black
        run : poetry run black --check --diff .

      - name: Test with pytest
        run: |
          poetry run pytest --durations=10 tests/

      - name: Test when using Comet
        if: "matrix.comet == true"
        env:
           COMET_API_KEY: ${{ secrets.COMET_API_KEY }}
        run: |
          poetry run pytest --durations=10 tests/tasks/classification_with_comet.py
          poetry run pytest --durations=10 tests/tasks/regression_with_comet.py
          poetry run pytest --durations=10 tests/utils/comet_support.py
