from typing import Dict, Any
import numpy as np
from torch.optim.optimizer import Optimizer

class TransformerOptimizer:
    warm_up: int = ...
    n_current_steps: int = ...
    init_lr: float = ...
    _optimizer: Optimizer = ...
    def __init__(self, optimizer: Optimizer, d_model: int, warm_up: int) -> None: ...
    def step(self) -> None: ...
    def zero_grad(self) -> None: ...
    def get_lr(self) -> float: ...
    def state_dict(self) -> Dict[str, Any]: ...
    def _update_learning_rate(self): ...
    def _get_lr_scale(self) -> np.ndarray: ...
