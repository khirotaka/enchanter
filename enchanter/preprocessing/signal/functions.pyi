from typing import Union, Tuple, List, Type, Optional, Callable
from numpy import ndarray, float32

_Numerical = Union[int, float]

class FixedSlidingWindow:
    window_size: int = ...
    overlap: int = ...
    def __init__(self, window_size: int, overlap_rate: Union[float, None], step_size: Optional[int]=None) -> None: ...
    def transform(self, inputs: ndarray, verbose: bool = False) -> ndarray: ...
    @staticmethod
    def clean(labels: ndarray) -> ndarray: ...
    def __call__(self, data: ndarray, target: ndarray) -> Tuple[ndarray, ndarray]: ...

def adjust_sequences(
        sequences: List[ndarray],
        max_len: Optional[Union[int, Callable[[List[int]], int]]] = None,
        fill: Union[str, _Numerical] = "ffill",
        dtype: Type = float32
) -> ndarray: ...
