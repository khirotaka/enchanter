import numpy as np
from typing import Union, Tuple, List, Type, Optional, Callable

class FixedSlidingWindow:
    window_size: int = ...
    overlap: int = ...
    def __init__(self, window_size: int, overlap_rate: Union[float, None], step_size: Optional[int]=None) -> None: ...
    def transform(self, inputs: np.ndarray, verbose: bool = False) -> np.ndarray: ...
    @staticmethod
    def clean(labels: np.ndarray) -> np.ndarray: ...
    def __call__(self, data: np.ndarray, target: np.ndarray) -> Tuple[np.ndarray, np.ndarray]: ...

def adjust_sequences(
        sequences: List[np.ndarray],
        max_len: Optional[Union[int, Callable[[List[int]], int]]] = None,
        dtype: Type = np.float32
) -> np.ndarray: ...
